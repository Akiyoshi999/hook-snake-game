{"version":3,"sources":["components/Button.jsx","components/Field.jsx","components/ManipulationPanel.jsx","components/Navigation.jsx","utils/index.ts","App.js","reportWebVitals.js","index.js"],"names":["GameStatus","Object","freeze","init","playing","suspend","gameover","Button","status","onStart","onSuspend","onRestart","className","onClick","Field","fields","map","row","column","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","fieledSize","snake","fileds","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","Direction","up","right","left","down","OppositeDirection","Delta","DirectionKeyCodeMap","37","38","39","40","timer","undefined","unsubscribe","clearInterval","App","useState","setFields","body","setBody","setStatus","tick","setTick","setDifficulty","directrion","setDirection","onChangeDirection","useCallback","newDirection","isCollision","position","isEatingMyself","useEffect","setInterval","newPosition","newBody","removingTrack","pop","unshift","handleMoving","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2f44a693.chunk.js","sourcesContent":["import React from 'react'\n\n// ゲームの状態\nconst GameStatus = Object.freeze({\n  init: 'init',\n  playing: 'playing',\n  suspend: 'suspend',\n  gameover: 'gameover',\n})\n\nconst Button = ({ status, onStart, onSuspend, onRestart }) => {\n  return (\n    <div className=\"button\">\n      {status === GameStatus.gameover && (\n        <button className=\"btn btn-gameover\" onClick={onRestart}>\n          gameover\n        </button>\n      )}\n      {status === GameStatus.init && (\n        <button className=\"btn btn-init\" onClick={onStart}>\n          start\n        </button>\n      )}\n      {status === GameStatus.suspend && (\n        <button className=\"btn btn-suspended\" onClick={onStart}>\n          start\n        </button>\n      )}\n      {status === GameStatus.playing && (\n        <button className=\"btn btn-playing\" onClick={onSuspend}>\n          stop\n        </button>\n      )}\n    </div>\n  )\n}\n\nexport default Button\n","import React from 'react'\n\nconst Field = ({ fields }) => {\n  return (\n    <div className=\"field\">\n      {fields.map((row) => {\n        return row.map((column) => {\n          return <div className={`dots ${column}`}></div>\n        })\n      })}\n    </div>\n  )\n}\n\nexport default Field\n","import {\n  faArrowDown,\n  faArrowLeft,\n  faArrowRight,\n  faArrowUp,\n} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport React from 'react'\n\nconst ManipulationPanel = ({ onChange }) => {\n  const onUp = () => onChange('up')\n  const onRight = () => onChange('right')\n  const onLeft = () => onChange('left')\n  const onDown = () => onChange('down')\n\n  return (\n    <div className=\"manipulation-panel\">\n      <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\n        <FontAwesomeIcon icon={faArrowLeft} />\n      </button>\n      <div>\n        <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\n          <FontAwesomeIcon icon={faArrowUp} />\n        </button>\n        <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\n          <FontAwesomeIcon icon={faArrowDown} />\n        </button>\n      </div>\n      <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\n        <FontAwesomeIcon icon={faArrowRight} />\n      </button>\n    </div>\n  )\n}\n\nexport default ManipulationPanel\n","import React from 'react'\n\nconst Navigation = ({ length, difficulty = 3, onChangeDifficulty }) => {\n  const upVisibility = difficulty < 5 ? '' : 'is-hidden'\n  const downVisibility = difficulty > 1 ? '' : 'is-hidden'\n  const onUpDifficulty = () => onChangeDifficulty(difficulty + 1)\n  const onDownDifficulty = () => onChangeDifficulty(difficulty - 1)\n  return (\n    <div className=\"navigation\">\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Length: </span>\n        <div className=\"navigation-item-number-container\">\n          <div className=\"num-board\">{length}</div>\n        </div>\n      </div>\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Difficulty: </span>\n        <div className=\"navigation-item-number-container\">\n          <span className=\"num-board\">{difficulty}</span>\n          <div className=\"difficulty-button-container\">\n            <div\n              className={`difficulty-button difficulty-up ${upVisibility}`}\n              onClick={onUpDifficulty}\n            ></div>\n            <div\n              className={`difficulty-button difficulty-down ${downVisibility}`}\n              onClick={onDownDifficulty}\n            ></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Navigation\n","type Coordinate = {\n  x: number\n  y: number\n}\n\n/**\n *エサの座標を決定する関数\n * @param fieldSize {number}フィールドのサイズ\n * @param excludes {Array<Coordinate>}エサを配置しない場所\n * @returns {Coordinate} エサの座標\n */\nexport const getFoodPosition = (\n  fieldSize: number,\n  excludes: Array<Coordinate>\n): Coordinate => {\n  for (;;) {\n    const x = Math.floor(Math.random() * (fieldSize - 2)) + 1\n    const y = Math.floor(Math.random() * (fieldSize - 2)) + 1\n    const conflict = excludes.some(\n      (item: Coordinate) => item.x === x && item.y === y\n    )\n    if (!conflict) {\n      return { x, y }\n    }\n  }\n}\n\n/**\n * 初期のフィールドを宣言する関数\n * @param fieledSize {number} フィールドサイズ\n * @param snake {Coordinate} スネークの座標\n */\nexport const initFields = (fieledSize: number, snake: Coordinate) => {\n  const fileds = []\n  for (let i = 0; i < fieledSize; i++) {\n    const cols = new Array(fieledSize).fill('')\n    fileds.push(cols)\n  }\n  fileds[snake.y][snake.x] = 'snake'\n\n  const food = getFoodPosition(fieledSize, [snake])\n  fileds[food.x][food.y] = 'food'\n\n  return fileds\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport Button from './components/Button'\nimport Field from './components/Field'\nimport ManipulationPanel from './components/ManipulationPanel'\nimport Navigation from './components/Navigation'\nimport { getFoodPosition, initFields } from './utils'\n\nconst initialPosition = { x: 17, y: 17 }\nconst initialValues = initFields(35, initialPosition)\nconst defaultInterval = 100\nconst defaultDifficulty = 3\nconst Difficulty = [1000, 700, 500, 300, 100]\n\n// 定数宣言\n// ゲームの状態\nconst GameStatus = Object.freeze({\n  init: 'init',\n  playing: 'playing',\n  suspend: 'suspend',\n  gameover: 'gameover',\n})\n\n// スネークの進行方向\nconst Direction = Object.freeze({\n  up: 'up',\n  right: 'right',\n  left: 'left',\n  down: 'down',\n})\n\n// スネークの進行方向変更の可否判定\nconst OppositeDirection = Object.freeze({\n  up: 'down',\n  right: 'left',\n  left: 'right',\n  down: 'up',\n})\n\n// スネーク\nconst Delta = Object.freeze({\n  up: { x: 0, y: -1 },\n  right: { x: 1, y: 0 },\n  left: { x: -1, y: 0 },\n  down: { x: 0, y: 1 },\n})\n\n// キーバインド\nconst DirectionKeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down,\n})\n\nlet timer = undefined\nconst unsubscribe = () => {\n  if (!timer) {\n    return\n  }\n  clearInterval(timer)\n}\n\nfunction App() {\n  /**\n   * useStateの宣言\n   */\n  const [fields, setFields] = useState(initialValues)\n  const [body, setBody] = useState([])\n  const [status, setStatus] = useState(GameStatus.init)\n  const [tick, setTick] = useState(0)\n  const [difficulty, setDifficulty] = useState(defaultDifficulty)\n  const [directrion, setDirection] = useState(Direction.up)\n\n  /**\n   * 関数の宣言\n   */\n  const onStart = () => setStatus(GameStatus.playing)\n  const onSuspend = () => setStatus(GameStatus.suspend)\n\n  const onRestart = () => {\n    timer = setInterval(() => {\n      setTick((tick) => tick + 1)\n    }, defaultInterval)\n    setStatus(GameStatus.init)\n    setBody([initialPosition])\n    setDirection(Direction.up)\n    setFields(initFields(35, initialPosition))\n  }\n\n  // 進行方向変更\n  const onChangeDirection = useCallback(\n    (newDirection) => {\n      if (status !== GameStatus.playing) {\n        return\n      }\n      if (OppositeDirection[directrion] === newDirection) {\n        return\n      }\n      setDirection(newDirection)\n    },\n    [directrion, status]\n  )\n\n  const onChangeDifficulty = useCallback(\n    (difficulty) => {\n      if (status !== GameStatus.init) {\n        return\n      }\n      if (difficulty < 1 || difficulty > Difficulty.length) {\n        return\n      }\n      setDifficulty(difficulty)\n    },\n    [status, difficulty]\n  )\n\n  // スネークの進行\n  const handleMoving = () => {\n    const { x, y } = body[0]\n    const newPosition = {\n      x: x + Delta[directrion].x,\n      y: y + Delta[directrion].y,\n    }\n    if (\n      isCollision(fields.length, newPosition) ||\n      isEatingMyself(fields, newPosition)\n    ) {\n      unsubscribe()\n      return false\n    }\n    const newBody = [...body]\n    // 次のポジションがfoodでない場合、bodyの末尾を空文字でリセット\n    if (fields[newPosition.y][newPosition.x] !== 'food') {\n      const removingTrack = newBody.pop()\n      fields[removingTrack.y][removingTrack.x] = ''\n    } else {\n      const food = getFoodPosition(fields.length, [...newBody, newPosition])\n      fields[food.y][food.x] = 'food'\n    }\n    fields[newPosition.y][newPosition.x] = 'snake'\n    newBody.unshift(newPosition)\n\n    setBody(newBody)\n    setFields(fields)\n    return true\n  }\n\n  // スネークがぶつかっているか判定\n  const isCollision = (fieldSize, position) => {\n    if (position.y < 0 || position.x < 0) {\n      return true\n    }\n    if (position.y > fieldSize - 1 || position.x > fieldSize - 1) {\n      return true\n    }\n    return false\n  }\n\n  const isEatingMyself = (fields, position) => {\n    return fields[position.y][position.x] === 'snake'\n  }\n\n  /**\n   * useEffect\n   */\n  useEffect(() => {\n    setBody([initialPosition])\n\n    // ゲームの中の時間を管理する\n    const interval = Difficulty[difficulty - 1]\n    timer = setInterval(() => {\n      setTick((tick) => tick + 1)\n    }, interval)\n    return unsubscribe //return コンポーネントが削除される時に実行する関数\n  }, [difficulty])\n\n  /**\n   * 時間を監視し、進行可能であればスネークを動かす\n   */\n  useEffect(() => {\n    if (!body.length === 0 || status !== GameStatus.playing) {\n      return\n    }\n    const canContinue = handleMoving()\n    if (!canContinue) {\n      unsubscribe()\n      setStatus(GameStatus.gameover)\n    }\n  }, [tick])\n\n  /**\n   * 1. レンダリング後、コールバックを実行する\n   * 2. status,directionが変更される\n   * 3. クリーン関数が呼ばれ、イベント解除\n   * 4. ２回目のイベント登録\n   */\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const newDirection = DirectionKeyCodeMap[e.keyCode]\n      if (!newDirection) {\n        return\n      }\n      onChangeDirection(newDirection)\n    }\n    document.addEventListener('keydown', handleKeyDown)\n    // リソースの無駄遣い防止のため、イベント登録解除\n    return () => document.removeEventListener('keydown', handleKeyDown)\n  }, [onChangeDirection])\n\n  // 検証用\n  // console.log('direction :', directrion)\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <div className=\"title-container\">\n          <h1 className=\"title\">Snake Game</h1>\n        </div>\n        <Navigation\n          length={body.length}\n          difficulty={difficulty}\n          onChangeDifficulty={onChangeDifficulty}\n        />\n      </header>\n      <main className=\"main\">\n        <Field fields={fields} />\n      </main>\n      <footer className=\"footer\">\n        <Button\n          status={status}\n          onStart={onStart}\n          onSuspend={onSuspend}\n          onRestart={onRestart}\n        />\n        <ManipulationPanel onChange={onChangeDirection} />\n      </footer>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}