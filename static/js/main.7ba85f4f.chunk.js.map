{"version":3,"sources":["utils/index.ts","constants/index.js","components/Button.jsx","components/Field.jsx","components/ManipulationPanel.jsx","components/Navigation.jsx","hooks/useSnakeGamke.js","App.js","reportWebVitals.js","index.js"],"names":["getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","fieledSize","snake","fileds","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspend","gameover","Direction","up","right","left","down","OppositeDirection","Delta","DirectionKeyCodeMap","37","38","39","40","Button","status","onStart","onSuspend","onRestart","className","onClick","Field","fields","map","row","column","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","timer","unsubscribe","clearInterval","useSnakeGame","useState","setFields","body","setBody","setStatus","tick","setTick","setDifficulty","directrion","setDirection","updateDirection","useCallback","newDirection","updateDifficulty","useEffect","setInterval","newPosition","position","isCollision","isEatingMyself","newBody","removingTrack","pop","unshift","handleMoving","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","start","stop","reload","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7ba85f4f.chunk.js","sourcesContent":["type Coordinate = {\n  x: number\n  y: number\n}\n\n/**\n *エサの座標を決定する関数\n * @param fieldSize {number}フィールドのサイズ\n * @param excludes {Array<Coordinate>}エサを配置しない場所\n * @returns {Coordinate} エサの座標\n */\nexport const getFoodPosition = (\n  fieldSize: number,\n  excludes: Array<Coordinate>\n): Coordinate => {\n  for (;;) {\n    const x = Math.floor(Math.random() * (fieldSize - 2)) + 1\n    const y = Math.floor(Math.random() * (fieldSize - 2)) + 1\n    const conflict = excludes.some(\n      (item: Coordinate) => item.x === x && item.y === y\n    )\n    if (!conflict) {\n      return { x, y }\n    }\n  }\n}\n\n/**\n * 初期のフィールドを宣言する関数\n * @param fieledSize {number} フィールドサイズ\n * @param snake {Coordinate} スネークの座標\n */\nexport const initFields = (fieledSize: number, snake: Coordinate) => {\n  const fileds = []\n  for (let i = 0; i < fieledSize; i++) {\n    const cols = new Array(fieledSize).fill('')\n    fileds.push(cols)\n  }\n  fileds[snake.y][snake.x] = 'snake'\n\n  const food = getFoodPosition(fieledSize, [snake])\n  fileds[food.x][food.y] = 'food'\n\n  return fileds\n}\n\n/**\n * スネークがぶつかっているか判定\n * @param fieldSize\n * @param position\n * @returns {boolean}\n */\nexport const isCollision = (\n  fieldSize: number,\n  position: Coordinate\n): boolean => {\n  if (position.y < 0 || position.x < 0) {\n    return true\n  }\n  if (position.y > fieldSize - 1 || position.x > fieldSize - 1) {\n    return true\n  }\n  return false\n}\n\n/**\n * 自分自身を食べていないかの判定\n * @param fields\n * @param position\n * @returns\n */\nexport const isEatingMyself = (fields: any, position: Coordinate): boolean => {\n  return fields[position.y][position.x] === 'snake'\n}\n","/**\n * 定数をまとめたファイル\n */\nimport { initFields } from '../utils'\n\nconst fieldSize = 35\nexport const initialPosition = { x: 17, y: 17 }\nexport const initialValues = initFields(fieldSize, initialPosition)\nexport const defaultInterval = 100\nexport const defaultDifficulty = 3\nexport const Difficulty = [1000, 700, 500, 300, 100]\n\n// 定数宣言\n// ゲームの状態\nexport const GameStatus = Object.freeze({\n  init: 'init',\n  playing: 'playing',\n  suspend: 'suspend',\n  gameover: 'gameover',\n})\n\n// スネークの進行方向\nexport const Direction = Object.freeze({\n  up: 'up',\n  right: 'right',\n  left: 'left',\n  down: 'down',\n})\n\n// スネークの進行方向変更の可否判定\nexport const OppositeDirection = Object.freeze({\n  up: 'down',\n  right: 'left',\n  left: 'right',\n  down: 'up',\n})\n\n// スネーク\nexport const Delta = Object.freeze({\n  up: { x: 0, y: -1 },\n  right: { x: 1, y: 0 },\n  left: { x: -1, y: 0 },\n  down: { x: 0, y: 1 },\n})\n\n// キーバインド\nexport const DirectionKeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down,\n})\n","import React from 'react'\nimport { GameStatus } from '../constants'\n\nconst Button = ({ status, onStart, onSuspend, onRestart }) => {\n  return (\n    <div className=\"button\">\n      {status === GameStatus.gameover && (\n        <button className=\"btn btn-gameover\" onClick={onRestart}>\n          gameover\n        </button>\n      )}\n      {status === GameStatus.init && (\n        <button className=\"btn btn-init\" onClick={onStart}>\n          start\n        </button>\n      )}\n      {status === GameStatus.suspend && (\n        <button className=\"btn btn-suspended\" onClick={onStart}>\n          start\n        </button>\n      )}\n      {status === GameStatus.playing && (\n        <button className=\"btn btn-playing\" onClick={onSuspend}>\n          stop\n        </button>\n      )}\n    </div>\n  )\n}\n\nexport default Button\n","import React from 'react'\n\nconst Field = ({ fields }) => {\n  return (\n    <div className=\"field\">\n      {fields.map((row) => {\n        return row.map((column) => {\n          return <div className={`dots ${column}`}></div>\n        })\n      })}\n    </div>\n  )\n}\n\nexport default Field\n","import {\n  faArrowDown,\n  faArrowLeft,\n  faArrowRight,\n  faArrowUp,\n} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport React from 'react'\nimport { Direction } from '../constants'\n\nconst ManipulationPanel = ({ onChange }) => {\n  const onUp = () => onChange(Direction.up)\n  const onRight = () => onChange(Direction.right)\n  const onLeft = () => onChange(Direction.left)\n  const onDown = () => onChange(Direction.down)\n\n  return (\n    <div className=\"manipulation-panel\">\n      <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\n        <FontAwesomeIcon icon={faArrowLeft} />\n      </button>\n      <div>\n        <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\n          <FontAwesomeIcon icon={faArrowUp} />\n        </button>\n        <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\n          <FontAwesomeIcon icon={faArrowDown} />\n        </button>\n      </div>\n      <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\n        <FontAwesomeIcon icon={faArrowRight} />\n      </button>\n    </div>\n  )\n}\n\nexport default ManipulationPanel\n","import React from 'react'\nimport { defaultDifficulty, Difficulty } from '../constants'\n\nconst Navigation = ({\n  length,\n  difficulty = defaultDifficulty,\n  onChangeDifficulty,\n}) => {\n  const upVisibility = difficulty < Difficulty.length ? '' : 'is-hidden'\n  const downVisibility = difficulty > 1 ? '' : 'is-hidden'\n  const onUpDifficulty = () => onChangeDifficulty(difficulty + 1)\n  const onDownDifficulty = () => onChangeDifficulty(difficulty - 1)\n  return (\n    <div className=\"navigation\">\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Length: </span>\n        <div className=\"navigation-item-number-container\">\n          <div className=\"num-board\">{length}</div>\n        </div>\n      </div>\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Difficulty: </span>\n        <div className=\"navigation-item-number-container\">\n          <span className=\"num-board\">{difficulty}</span>\n          <div className=\"difficulty-button-container\">\n            <div\n              className={`difficulty-button difficulty-up ${upVisibility}`}\n              onClick={onUpDifficulty}\n            ></div>\n            <div\n              className={`difficulty-button difficulty-down ${downVisibility}`}\n              onClick={onDownDifficulty}\n            ></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Navigation\n","import { useCallback, useEffect, useState } from 'react'\nimport {\n  defaultDifficulty,\n  defaultInterval,\n  Delta,\n  Difficulty,\n  Direction,\n  DirectionKeyCodeMap,\n  GameStatus,\n  initialPosition,\n  initialValues,\n  OppositeDirection,\n} from '../constants'\nimport {\n  getFoodPosition,\n  initFields,\n  isCollision,\n  isEatingMyself,\n} from '../utils'\n\nlet timer = null\nconst unsubscribe = () => {\n  if (!timer) {\n    return\n  }\n  clearInterval(timer)\n}\n\nconst useSnakeGame = () => {\n  const [fields, setFields] = useState(initialValues)\n  const [body, setBody] = useState([])\n  const [status, setStatus] = useState(GameStatus.init)\n  const [tick, setTick] = useState(0)\n  const [difficulty, setDifficulty] = useState(defaultDifficulty)\n  const [directrion, setDirection] = useState(Direction.up)\n\n  /**\n   * 関数の宣言\n   */\n  const start = () => setStatus(GameStatus.playing)\n  const stop = () => setStatus(GameStatus.suspend)\n\n  const reload = () => {\n    timer = setInterval(() => {\n      setTick((tick) => tick + 1)\n    }, defaultInterval)\n    setStatus(GameStatus.init)\n    setBody([initialPosition])\n    setDirection(Direction.up)\n    setFields(initFields(fields.length, initialPosition))\n  }\n\n  // 進行方向変更\n  const updateDirection = useCallback(\n    (newDirection) => {\n      if (status !== GameStatus.playing) {\n        return\n      }\n      if (OppositeDirection[directrion] === newDirection) {\n        return\n      }\n      setDirection(newDirection)\n    },\n    [directrion, status]\n  )\n\n  const updateDifficulty = useCallback(\n    (difficulty) => {\n      if (status !== GameStatus.init) {\n        return\n      }\n      if (difficulty < 1 || difficulty > Difficulty.length) {\n        return\n      }\n      setDifficulty(difficulty)\n    },\n    [status, difficulty]\n  )\n\n  // スネークの進行\n  const handleMoving = () => {\n    const { x, y } = body[0]\n    const newPosition = {\n      x: x + Delta[directrion].x,\n      y: y + Delta[directrion].y,\n    }\n    if (\n      isCollision(fields.length, newPosition) ||\n      isEatingMyself(fields, newPosition)\n    ) {\n      unsubscribe()\n      return false\n    }\n    const newBody = [...body]\n    // 次のポジションがfoodでない場合、bodyの末尾を空文字でリセット\n    if (fields[newPosition.y][newPosition.x] !== 'food') {\n      const removingTrack = newBody.pop()\n      fields[removingTrack.y][removingTrack.x] = ''\n    } else {\n      const food = getFoodPosition(fields.length, [...newBody, newPosition])\n      fields[food.y][food.x] = 'food'\n    }\n    fields[newPosition.y][newPosition.x] = 'snake'\n    newBody.unshift(newPosition)\n\n    setBody(newBody)\n    setFields(fields)\n    return true\n  }\n\n  /**\n   * useEffect\n   */\n  useEffect(() => {\n    setBody([initialPosition])\n\n    // ゲームの中の時間を管理する\n    const interval = Difficulty[difficulty - 1]\n    timer = setInterval(() => {\n      setTick((tick) => tick + 1)\n    }, interval)\n    return unsubscribe //return コンポーネントが削除される時に実行する関数\n  }, [difficulty])\n\n  /**\n   * 時間を監視し、進行可能であればスネークを動かす\n   */\n  useEffect(() => {\n    if (!body.length === 0 || status !== GameStatus.playing) {\n      return\n    }\n    const canContinue = handleMoving()\n    if (!canContinue) {\n      unsubscribe()\n      setStatus(GameStatus.gameover)\n    }\n  }, [tick])\n\n  /**\n   * 1. レンダリング後、コールバックを実行する\n   * 2. status,directionが変更される\n   * 3. クリーン関数が呼ばれ、イベント解除\n   * 4. ２回目のイベント登録\n   */\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const newDirection = DirectionKeyCodeMap[e.keyCode]\n      if (!newDirection) {\n        return\n      }\n      updateDirection(newDirection)\n    }\n    document.addEventListener('keydown', handleKeyDown)\n    // リソースの無駄遣い防止のため、イベント登録解除\n    return () => document.removeEventListener('keydown', handleKeyDown)\n  }, [updateDirection])\n\n  return {\n    body,\n    difficulty,\n    fields,\n    status,\n    start,\n    stop,\n    reload,\n    updateDirection,\n    updateDifficulty,\n  }\n}\n\nexport default useSnakeGame\n","import React from 'react'\nimport Button from './components/Button'\nimport Field from './components/Field'\nimport ManipulationPanel from './components/ManipulationPanel'\nimport Navigation from './components/Navigation'\nimport useSnakeGame from './hooks/useSnakeGamke'\n\nfunction App() {\n  const {\n    body,\n    difficulty,\n    fields,\n    status,\n    start,\n    stop,\n    reload,\n    updateDirection,\n    updateDifficulty,\n  } = useSnakeGame()\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <div className=\"title-container\">\n          <h1 className=\"title\">Snake Game</h1>\n        </div>\n        <Navigation\n          length={body.length}\n          difficulty={difficulty}\n          onChangeDifficulty={updateDifficulty}\n        />\n      </header>\n      <main className=\"main\">\n        <Field fields={fields} />\n      </main>\n      <footer className=\"footer\">\n        <Button\n          status={status}\n          onStart={start}\n          onSuspend={stop}\n          onRestart={reload}\n        />\n        <ManipulationPanel onChange={updateDirection} />\n      </footer>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}